#pragma checksum "F:\TestApi\KeepTrack\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3490e08e5d347384c07e1b099c0adab1cf6a1f5d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.razor-page", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index), null)]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3490e08e5d347384c07e1b099c0adab1cf6a1f5d", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "F:\TestApi\KeepTrack\Views\Home\Index.cshtml"
  
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";

#line default
#line hidden
            BeginContext(128, 1652, true);
            WriteLiteral(@"<button id=""user"" onclick=""myFunction()"" class=""btn-login log-page-button"">
    <img src=""img/1.png"" alt=""img"" class="" btn-icon"">
</button>

<div class=""sidebar"">
    <img class=""main-logo"" src=""img/logo.png"">

    <button class=""btn-add-agent"">Add Agent <div class=""fa fa-plus""></div></button>

    <button class=""accordion tooltip"" onclick=""dropdown()"">Agents On Work <div class=""fa fa-caret-down""></div><span class=""tooltiptext"">Double click</span></button>
    <div class=""panel"">
        <p><button class=""agents"">Nick Fury</button></p>
        <p><button class=""agents"">Agent Black</button></p>
        <p><button class=""agents"">Agent 007</button></p>
        <p><button class=""agents"">Nick Fury</button></p>
        <p><button class=""agents"">Agent Black</button></p>
        <p><button class=""agents"">Agent 007</button></p>
    </div>

    <button class=""accordion tooltip"" onclick=""dropdown()"">All Agent<div class=""fa fa-caret-down""></div><span class=""tooltiptext"">Double click</span></button>
  ");
            WriteLiteral(@"  <div class=""panel"">
        <p>
            <button class=""agents tooltip"" onclick=""details()"">
                Nick Fury
            </button>
        </p>
        <p>
            <button class=""agents tooltip"" onclick=""details()"">
                Agent Black
            </button>
        </p>
        <p>
            <button class=""agents tooltip"" onclick=""details()"">
                Agent 007
            </button>
        </p>
    </div>
</div>

<script async defer src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyDCqP8UOjPDuhwMZjkK-4IxE-wIb7VNG9g""></script>
<div id=""map"" class=""map""></div>
");
            EndContext();
            BeginContext(1889, 3363, true);
            WriteLiteral(@"
<div id=""wrapper"" class=""flip-card"" style=""display: none;"">

    <div id=""formContainer"" class=""flip-card-inner"">
        <div class=""flip-card-front"">
            <form class=""card-content-front animate"" method=""post"" asp-action=""Login"">
                <h1 class=""heading"">Login Form</h1>

                <div class=""container"">
                    <input type=""text"" placeholder=""Enter Username"" asp-for=""Email"">
                    <input type=""password"" placeholder=""Enter Password"" asp-for=""password"">
                    <button type=""submit"" class=""log-page-button"">Login</button>
                    <a id=""btnreg"" onclick=""rotate()"" class=""btn-reg log-page-button"">Register</a>
                    <input id=""remme"" type=""checkbox"" style=""margin:20px 10px 20px 20px;""> Remember me
                    <a href=""#"" class=""link"">Forgot Password ?</a>
                </div>

            </form>
        </div>
        <div class=""flip-card-back"">
            <form class=""card-content-front anim");
            WriteLiteral(@"ate"" method=""post"">
                <h1 class=""heading"">Registration Form</h1>

                <div class=""container"">
                    <input type=""text"" placeholder=""Enter Company Name"" asp-for=""Name"" id=""Name"">
                    <input type=""text"" placeholder=""Enter Email ID"" asp-for=""Email"" id=""Email"">
                    <input type=""text"" placeholder=""Enter Email ID"" asp-for=""contact"" id=""contact"">
                    <input type=""password"" placeholder=""Enter Password"" asp-for=""password"" id=""password"">
                    <button type=""button"" class=""log-page-button"" id=""btnSubmit"">submit</button><a id=""register"" onclick=""revRotate()"" class=""btn-reg log-page-button"">Login</a>

                    <a href=""#"" style=""text-decoration:none; float:right; margin-right:34px; margin-top:26px;"">Forgot Password ?</a>
                </div>

            </form>
        </div>
    </div>
</div>
<script>
    $(""#btnSubmit"").click(function () {
        debugger
        var OwnerData = new Ob");
            WriteLiteral(@"ject();  
                 OwnerData.OwnerName = $('#Name').val();  
                OwnerData.OwnerEmail = $('#Email').val();  
                 OwnerData.OwnerContact = $('#contact').val();  
                 OwnerData.Ownerpass = $('#password').val();  
                  

                 $.ajax({  
                     url: 'https://localhost:5001/api/owner',  
                     type: 'POST',  
                     contentType:""application/json"",
                     dataType: 'json',
                     crossDomain: true,
                     data: JSON.stringify(OwnerData),  
                     success: function (data, textStatus, xhr) {
                         if (data != undefined) {
                             alert(""Record added succssfully"")
                             window.location.href = ""https://localhost:44304/Home/index"";
                         }
                         else {
                              alert(""Error something wrong"")
                     ");
            WriteLiteral(@"    }
                         //console.log(data);  
                     },  
                     error: function (xhr, textStatus, errorThrown) {  
                         console.log('Error in Operation');  
                     }  
                 });  
    });
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KeepTrack.Models.Registration> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<KeepTrack.Models.Registration> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<KeepTrack.Models.Registration>)PageContext?.ViewData;
        public KeepTrack.Models.Registration Model => ViewData.Model;
    }
}
#pragma warning restore 1591
